Docker Threat Modeling
Given Docker's system components and the STRIDE framework, identify five potential threats that may arise.

1.Spoofing - An image may be spoofed with malicious images or libraries as part of the container layers, which affects image/container security. Add proper logging at "info" level could help detect the issue.

2.Tampering - /var/lib/docker folder may be tampered, lead to system compromise. To remediate, could audit /var/lib/docker folder.

3.Repudiation - A user may make changes to the daemon configuration (/etc/docker/daemon.json) that are not legitimate, leading to misconfiguration. Could audit /etc/docker/daemon.json to log events on the file.

4.Denial of Service - Excessive traffic from the client could overwhelm the daemon (often on the same machine) and could cause it to crash, leading to a client compromise. Set docker logging to the "info" level helps detect related issues.

5.Elevation of Privilege - Malicious images/containers can try to elevate its privileges on the system. Set docker logging to the "info" level could help detect related issues.




Kubernetes Threat Modeling
Given Kubernetes' system components and the STRIDE framework, identify five potential threats that may arise.

1.Tampering - The configuration of etcd may be tampered with by an attacker, modifying vital system-level configurations such as pod specs. This can be mitigated by restricting permissions on etcd files to 644 or more restrictive and that the pod spec file is set to root ownership.

2.Information Disclosure - Kube-proxy can expose sensitive information. To ensure the kube-proxy does not expose information, the --kubeconfig should be set to permissions 644 or less permissive.

3.Denial of Service - excessive traffic to the API server can overwhelm the endpoint. kube-scheduler can incorrectly schedule the pod.

4.Elevation of Privilege - privilege can be abused by using the privileged flag. This should be avoided in all cases. This affects kube-apiserver.

5.Repudiation - Unauthorized changes can be made to kubelet. To avoid this, kubelet authentication should be TLS and weak/ basic auth should not be allowed.




Docker-bench Run Results and Analysis
From the failed findings, select and document 3 findings from the Docker-bench results that you want to harden based on the 5 attack surface areas you identified in Step 1. At least 1 of the 3 hardened findings should be different from the ones mentioned in the exercise (i.e. 5.10, 5.14, and 5.22).

[FAIL] 1.2.4 Ensure auditing is configured for Docker files and directories - /var/lib/docker (Scored)
[FAIL] 1.2.10 Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json (Scored)
[FAIL] 2.2.b Ensure the logging level is set to 'info' (Scored)

